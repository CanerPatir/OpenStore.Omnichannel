@page "/products/{ProductId:guid}/variants/{VariantId:guid}"
@using OpenStore.Omnichannel.Shared.Dto.Product


@inject IStringLocalizer<UpdateVariant> L
@inject UpdateVariantViewModel ViewModel

<Container>
    <Row class="justify-content-center">
        <Column ColumnSize="ColumnSize.Is8.OnDesktop">

            @if (ViewModel.IsNull)
            {
                <OsSpinner/>
            }
            else
            {
                <OsPageTitle RootHref="@($"/products/{ProductId}")">
                    <TitleSection>
                        <span>@ViewModel.Model.Title</span>
                    </TitleSection>
                    <ButtonsSection>
                        <Button Loading="ViewModel.Saving" Clicked="Save" Color="Color.Success">
                            @if (!ViewModel.Saving)
                            {
                                <Icon Name="IconName.Save" Class="me-1"></Icon>
                            }
                            @SharedLocalizer["Generic.Save"]
                        </Button>
                    </ButtonsSection>
                </OsPageTitle>
                
                <Validations @ref="_validations" Mode="ValidationMode.Manual" Model="ViewModel.Model">
                    <Row>
                        <Column ColumnSize="ColumnSize.Is4.OnDesktop">
                            <Card Margin="Margin.Is3.FromBottom">
                                <CardBody>

                                </CardBody>
                            </Card>
                            <Card Margin="Margin.Is3.FromBottom">
                                <CardBody>

                                </CardBody>
                            </Card>
                        </Column>
                        <Column ColumnSize="ColumnSize.Is8.OnDesktop">
                            <Card Margin="Margin.Is3.FromBottom">
                                <CardBody>

                                </CardBody>
                            </Card>

                            <PricingEditor Model="ViewModel.Model"/>
                            <InventoryEditor Model="ViewModel.Model"/>
                        </Column>
                    </Row>
                </Validations>

                <hr class="mb-4">
                <Row>
                    <div class="d-flex align-items-center mb-4">

                        <div>
                            <Button Loading="ViewModel.Deleting" Clicked="Delete" Color="Color.Danger">
                                @if (!ViewModel.Deleting)
                                {
                                    <Icon Name="IconName.Delete" Class="me-1"></Icon>
                                }
                                @SharedLocalizer["Generic.Delete"]
                            </Button>
                        </div>
                        <div class="ms-auto">
                            <Button Loading="ViewModel.Saving" Clicked="Save" Color="Color.Success">
                                @if (!ViewModel.Saving)
                                {
                                    <Icon Name="IconName.Save" Class="me-1"></Icon>
                                }
                                @SharedLocalizer["Generic.Save"]
                            </Button>
                        </div>
                    </div>
                </Row>
            }

        </Column>
    </Row>
</Container>

@code {
    private Validations _validations;

    [Parameter]
    public Guid ProductId { get; set; }

    [Parameter]
    public Guid VariantId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await ViewModel.Retrieve(ProductId, VariantId);
    }

    private Task Save() => ViewModel.Save();
    
    private async Task Delete()
    {
        if (!DeleteConfirm())
        {
            return;
        }
        await ViewModel.Delete();
    }

}