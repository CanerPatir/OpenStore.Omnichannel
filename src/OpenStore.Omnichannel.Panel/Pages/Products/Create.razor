@page "/products/add"
@using OpenStore.Omnichannel.Shared.Dto.Product
@inject IStringLocalizer<Create> L

<Container>
    <Row class="justify-content-center">
        <Column ColumnSize="ColumnSize.Is8.OnDesktop">
            <OsBreadcrumb RootHref="products" RootTitle="@L["Breadcrumb.Products"]" CurrentTitle="@L["Breadcrumb.AddProduct"]">
                <TitleSection>
                    @if (string.IsNullOrWhiteSpace(_product.Title))
                    {
                        <span>@L["NewProduct"]</span>
                    }
                    else
                    {
                        <span>@_product.Title</span>
                    }

                    <Badge Color="Color.Warning">
                        Draft
                    </Badge>
                </TitleSection>
                <ButtonsSection>
                    <Button Clicked="Save" Color="Color.Success">
                        <i class="fa fa-save fa-fw me-1"></i> @L["Button.Save"]
                    </Button>
                </ButtonsSection>
            </OsBreadcrumb>

            <Row>
                <Validations @ref="_validations" Mode="ValidationMode.Manual" Model="_product">
                    <Column ColumnSize="ColumnSize.Is8.OnDesktop">
                        <ProductContentEditor HeaderTitle="" Model="@_product" ModelChanged="@(p => StateHasChanged())"/>
                        <MediaEditor HeaderTitle="@L["CardTitle.Media"]" Model="@_product.Medias"/>
                        <PricingEditor HeaderTitle="@L["CardTitle.Pricing"]" Model="@_product.Pricing"/>
                        <InventoryEditor HeaderTitle="@L["CardTitle.Inventory"]" Model="@_product.Inventory"/>
                        <ShippingEditor HeaderTitle="@L["CardTitle.Shipping"]" Model="@_product.Shipping"/>
                        <VariantsEditor HeaderTitle="@L["CardTitle.Variants"]" Model="@_product.Variants"/>
                        <MetaEditor HeaderTitle="@L["CardTitle.Seo"]" Model="@_product.Meta"/>
                    </Column>

                    <Column ColumnSize="ColumnSize.Is4.OnDesktop">
                        
                        <ListGroup Margin="Margin.Is3.FromBottom">
                            <ListGroupItem>
                                <h5>
                                    @L["CardTitle.Status"]
                                </h5>
                                Status
                            </ListGroupItem>
                            <ListGroupItem>
                                <h5>
                                    @L["CardTitle.Channels"]
                                </h5>
                                Channels
                            </ListGroupItem>
                        </ListGroup>
                        
                        <ListGroup Margin="Margin.Is3.FromBottom">
                            <ListGroupItem>
                                <h5>
                                    @L["CardTitle.Collections"]
                                </h5>
                                collections
                            </ListGroupItem>
                            <ListGroupItem>
                                <h5>
                                    @L["CardTitle.Tags"]
                                </h5>
                                <OsChipsInput Chips="@_tags"/>

                            </ListGroupItem>
                        </ListGroup>


                    </Column>
                </Validations>
            </Row>
            <hr class="mb-4">
            <Row>
                <div class="d-flex align-items-center mb-4">
                    <div class="ms-auto">
                        <Button Clicked="Save" Color="Color.Success">
                            <i class="fa fa-save fa-fw me-1"></i> @L["Button.Save"]
                        </Button>
                    </div>
                </div>
            </Row>
        </Column>
    </Row>
</Container>

@code {
    private readonly ProductDto _product = new();
    private Validations _validations;

    private List<string> _tags = new List<string>();

    private Task UploadImage()
    {
    // Save image and get id
    // add image id to array

        return Task.CompletedTask;
    }

    private async Task Save()
    {
        if (!_validations.ValidateAll())
        {
            return;
        }
    }

}